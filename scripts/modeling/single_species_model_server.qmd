---
title: "loading data from server"
format: html
editor: visual
---

```{r}
# Load packages
library(tidyverse)
library(dplyr)
library(SSDM)
library(biooracler)
library(raster)
library(terra)
library(purrr)
library(shinyFiles) # For ssdm shiny interface
library(here)
library(sf)

# Load functions 
source(here::here('scripts', 'functions', 'clean_biodiv.R'))
```


# Read in Data

### Read in biodiv data 

### Read in rasters manually

```{r}
# Manually read in the rasters
thetao_mean_50  <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/projected_ssp460/thetao_mean_50.tif")
tas_mean_50     <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/projected_ssp460/tas_mean_50.tif")
so_mean_50      <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/projected_ssp460/so_mean_50.tif")
o2_mean_50      <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/projected_ssp460/o2_mean_50.tif")
mlotst_mean_50  <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/projected_ssp460/mlotst_mean_50.tif")
clt_mean_50     <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/projected_ssp460/clt_mean_50.tif")

# Combine into one multi-layer object
env_50_load <- c(thetao_mean_50,
                  tas_mean_50,
                  so_mean_50,
                  o2_mean_50,
                  mlotst_mean_50,
                  clt_mean_50)
```

```{r}
env_50_load <- stack(env_50_load)
```

```{r}
# Manually read in the historical rasters
thetao_mean_00  <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/historical/thetao_mean_00.tif")
tas_mean_00     <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/historical/tas_mean_00.tif")
so_mean_00      <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/historical/so_mean_00.tif")
o2_mean_00      <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/historical/o2_mean_00.tif")
mlotst_mean_00  <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/historical/mlotst_mean_00.tif")
clt_mean_00     <- rast("/capstone/coastalconservation/data/raw/BioOrc_rasters/historical/clt_mean_00.tif")

# Combine into a single multi‐layer SpatRaster
env_00_load <- c(
  thetao_mean_00,
  tas_mean_00,
  so_mean_00,
  o2_mean_00,
  mlotst_mean_00,
  clt_mean_00
)

env_00_load <- stack(env_00_load)
```


### Clean workflow for one species

There is an issue doing this online because the clean_biodive function hard calls in the file

```{r}
# Read in biodiversity data 
biodiv_2025 <- clean_biodiv(cbs_excel_name = 'cbs_data_2025.xlsx', 
                              point_contact_sheet = 'point_contact_summary_layered',
                              quadrat_sheet = 'quadrat_summary_data',
                              swath_sheet = 'swath_summary_data')
```


### Read in raster data using load_var

This worked!

##### Loading in for 00


```{r}
env_00_load <- load_var(path = file_names, files = NULL, format = ".tif")
```

##### Loading in for 50

```{r}
env_50_load <- load_var(path = here("data", "raw", "BioOrc_rasters", "env_50"), files = NULL, format = ".tif")
```
##### Renaming variables in rasters

```{r}
# Creating new names for raster, to ensure both raster stacks match in names
new_names <- c("clt__depthsurf_mean", "mlotst_depthsurf_mean", "o2depthmax_mean0", "so_depthsurf_mean", "tas_depthsurf_mean", "thetao_depthsurf_mean")
```

```{r}
print(env_00_load)
```


```{r}
# applying the names
names(env_00_load) <- new_names
names(env_50_load) <- new_names
```



### Modeling with Alaria marginata

##### Formatting data

```{r}
# Filter to alaria
alaria_data <- biodiv_2025 %>% 
  filter(species_lump == "Alaria marginata")
```

```{r}
# Formatting observation data
alaria_obs <- alaria_data |>
  group_by(species_lump, latitude, longitude) |>
  summarise(num_count = sum(total_count)) |>
  ungroup()
```

```{r}
# Expand rows & keep observation column
alaria_obs_present <- alaria_obs |>
  filter(num_count >=1 ) |>
  uncount(num_count) 
```

### Running SDMs, GLM AND GAM

For individual species model with one model type

```{r}
# GLM
SDM_glm <- modelling('GLM', subset(alaria_obs_present, alaria_obs_present$species_lump == 'Alaria marginata'), 
                 env_00_load, Xcol = 'longitude', Ycol = 'latitude', verbose = FALSE)
plot(SDM_glm@projection, main = 'SDM\nfor Alaria marginata\nwith GLM algorithm')
```

## Function for modeling a single species

```{r}
single_species_model <- function(species){
  
  species_data <- biodiv_2025 %>% 
  filter(species_lump == species)
  
  species_obs <- species_data |>
  group_by(species_lump, latitude, longitude) |>
  summarise(num_count = sum(total_count)) |>
  ungroup()
  
  species_obs_present <- species_obs |>
  filter(num_count >=1 ) |>
  uncount(num_count)
}
```



