---
title: "Monitoring_priority_analysis"
format: html
editor_options: 
  chunk_output_type: inline
---

This file walks through how we combined data sets to create the monitorying priority list. Each species is given a monitoring priority based on three criteria: 1. Whether they have a range edge within point conception, 2. Whether they are showing a range shift trend, 3. Whether the percentage of habitat suitability is going up or down within point conception. 



```{r}
# Load packages
library(tidyverse)
```

## Load Processed Files

```{r}
# Load files 
raster_stats <- read.csv('/capstone/coastalconservation/data/processed/analyses_results/species_suitability_change.csv')
ntrend_stats <- read.csv('/capstone/coastalconservation/data/processed/ntrends_stats.csv')
strend_stats <- read.csv('/capstone/coastalconservation/data/processed/strends_stats.csv')
species_names <- read_csv('/capstone/coastalconservation/data/processed/species_names.csv')
priority_species_binary <- read_csv('/capstone/coastalconservation/data/processed/analyses_results/priority_species_binary.csv')
species_extent <- read_csv('/capstone/coastalconservation/data/processed/species_extent.csv')
```


```{r}
pc_species <- species_extent %>%
    filter(str_detect(southern_extent_name, "Point Conception") |
        str_detect(northern_extent_name, "Point Conception"))
```

```{r}
pc_species
```

```{r}
pc_species_list <- pc_species %>% pull(species_lump)
pc_species_list
```

Northern
```{r}
n_edge_species <- pc_species %>%
    filter(
        str_detect(northern_extent_name, "Point Conception")
    ) %>%
    pull(species_lump)
```

```{r}
n_edge_species
```

Southern
```{r}
s_edge_species <- pc_species %>%
    filter(
        str_detect(southern_extent_name, "Point Conception")
    ) %>%
    pull(species_lump)
```

```{r}
s_edge_species
```


## Cleaning and combining ntrend_stats and strend_stats

```{r}
# Filter to only northern edge species moving north
n_edge_trends <- ntrend_stats %>% 
  # one coastline segment (100km) in 25 year datasets
  # 4km per year
  filter(n_trend_rate / 1000 >= 4) 
```

```{r}
n_edge_trends %>% 
    pull(species)
```

```{r}
# Filter to only southern edge species moving north
s_edge_trends <- strend_stats %>%
  # one coastline segment (100km) in 25 year datasets
  # 4km per year
  filter(n_trend_rate / 1000 >= 4)
```


```{r}
s_edge_trends %>% 
    pull(species)
```

```{r}
# Combine data frames
species_trends <- rbind(strend_stats, ntrend_stats)
```

```{r}
# Rename species column to species_lump
species_trends <- species_trends %>% 
  rename(species_lump = species)
```

## Cleaning raster_stats

```{r}
raster_stats_clean <- raster_stats %>% 
  select(species_name, percent_change_dangermond) %>% 
  rename(species_lump = species_name)
```

## Creating a data frame that describes which species has northern or southern range boundaries

```{r}
# Create data frames
pc_edge_species_df <- data.frame(
  species_lump = pc_species_list, 
  n_range_edge = case_when(
    pc_species_list %in% n_edge_species ~ TRUE,
    TRUE ~ FALSE
  ),
  s_range_edge = case_when(
    pc_species_list %in% s_edge_species ~ TRUE,
    TRUE ~ FALSE
  )
)
```

## Combine cleaned dataframes

```{r}
# Combine range_edge_df and species_trends
range_trends <- full_join(pc_edge_species_df, species_trends, by = "species_lump")
```

```{r}
# Combine range_trends with raster_trends_clean
all_species_factors <- full_join(raster_stats_clean, range_trends, by = "species_lump")
```


```{r}
all_species <- species_names %>%
  select(species_lump, common_name)
```


```{r}
all_species_factors <- left_join(all_species, all_species_factors, by = "species_lump")


all_species_factors %>% view()
```

```{r}
all_species_factors %>% 
  filter(species_lump %in% pc_species_list,
         percent_change_dangermond > 0)

all_species_factors %>% 
  filter(species_lump %in% pc_species_list,
         percent_change_dangermond < 0)

all_species_factors %>% 
  filter(species_lump %in% pc_species_list,
         is.na(percent_change_dangermond))
```
## Scoring species

```{r}
priority_scores <- all_species_factors %>%
  reframe(
    species_lump = species_lump,
    common_name = common_name,
    eco_process = case_when(
      species_lump %in% n_edge_species ~ "expansion",
      species_lump %in% s_edge_species ~ "contraction",
      TRUE ~ NA
      ),
    northern_range_edge = case_when(
      species_lump %in% n_edge_species ~ 1,
      TRUE ~ 0
      ),
    southern_range_edge = case_when(
      species_lump %in% s_edge_species ~ 1,
      TRUE ~ 0
      ),
    suitability_increase = case_when(
      percent_change_dangermond > 0 & eco_process == "expansion" ~ 1,
      TRUE ~ 0
    ),
    suitability_decrease = case_when(
      percent_change_dangermond < 0 & eco_process == "contraction" ~ 1,
      TRUE ~ 0
    ),
    northward_trend = case_when(
      n_trend_rate / 1000 >= 4 ~ 1,
      TRUE ~ 0
    ),
    species_expansion_score = northern_range_edge + northward_trend + suitability_increase,
    species_contraction_score = southern_range_edge + northward_trend + suitability_decrease,
    total_score = case_when(
      eco_process == "expansion" ~ species_expansion_score,
      eco_process == "contraction" ~ species_contraction_score,
      TRUE ~ 0
    ),
    priority = case_when(
      total_score == 3 ~ "high",
      total_score == 2 ~ "moderate",
      total_score == 1 ~ "low",
      total_score == 0 ~ "no"
    )
  ) 

priority_scores[248,]$eco_process <- "contraction"

priority_scores %>% view()
```


```{r}
priority_species_binary %>% names()
priority_scores %>% names()
```

```{r}
priority_scores %>%
  filter(northward_trend == 1, eco_process == "expansion") %>%
  pull(species_lump)
```


```{r}
saveRDS(
  priority_scores,
  file = "/capstone/coastalconservation/data/processed/analyses_results/priority_species_scores.rds"
)
```

```{r}
priority_scores %>% filter(eco_process == "expansion") %>% view()
```
